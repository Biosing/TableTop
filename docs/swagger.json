{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for a table top game.",
        "title": "Table Top API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/characters": {
            "get": {
                "description": "List all characters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Characters"
                ],
                "summary": "List all characters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Character"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new character",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Characters"
                ],
                "summary": "Create a new character",
                "parameters": [
                    {
                        "description": "Character",
                        "name": "character",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/characters.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Character"
                        }
                    }
                }
            }
        },
        "/characters/{id}": {
            "get": {
                "description": "Get a character by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Characters"
                ],
                "summary": "Get a character by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Character ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Character"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a character",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Characters"
                ],
                "summary": "Update a character",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enemy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Character",
                        "name": "character",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/characters.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Character"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a character by ID",
                "tags": [
                    "Characters"
                ],
                "summary": "Delete a character by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Character ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/combo_cards": {
            "get": {
                "description": "List all combo cards",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ComboCards"
                ],
                "summary": "List all combo cards",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ComboCard"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new combo card",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ComboCards"
                ],
                "summary": "Create a new combo card",
                "parameters": [
                    {
                        "description": "Combo Card",
                        "name": "comboCard",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/combo_cards.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ComboCard"
                        }
                    }
                }
            }
        },
        "/combo_cards/{id}": {
            "get": {
                "description": "Get a combo card by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ComboCards"
                ],
                "summary": "Get a combo card by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Combo Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ComboCard"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a combo card",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ComboCards"
                ],
                "summary": "Update a combo card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Combo Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Combo Card",
                        "name": "comboCard",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/combo_cards.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ComboCard"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a combo card",
                "tags": [
                    "ComboCards"
                ],
                "summary": "Delete a combo card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Combo Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/damage_combo_cards": {
            "get": {
                "description": "List all damage combo cards",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DamageComboCards"
                ],
                "summary": "List all damage combo cards",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DamageComboCard"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new damage combo card",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DamageComboCards"
                ],
                "summary": "Create a new damage combo card",
                "parameters": [
                    {
                        "description": "Damage Combo Card",
                        "name": "damageComboCard",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/damage_combo_cards.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DamageComboCard"
                        }
                    }
                }
            }
        },
        "/damage_combo_cards/{id}": {
            "get": {
                "description": "Get a damage combo card by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DamageComboCards"
                ],
                "summary": "Get a damage combo card by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Damage Combo Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DamageComboCard"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a damage combo card",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DamageComboCards"
                ],
                "summary": "Update a damage combo card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Damage Combo Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Damage Combo Card",
                        "name": "damageComboCard",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/damage_combo_cards.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DamageComboCard"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a damage combo card",
                "tags": [
                    "DamageComboCards"
                ],
                "summary": "Delete a damage combo card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Damage Combo Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/enemies": {
            "get": {
                "description": "List all enemies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Enemies"
                ],
                "summary": "List all enemies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Enemy"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new enemy with enemy moves",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Enemies"
                ],
                "summary": "Create a new enemy",
                "parameters": [
                    {
                        "description": "Enemy",
                        "name": "enemy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/enemies.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Enemy"
                        }
                    }
                }
            }
        },
        "/enemies/{id}": {
            "get": {
                "description": "Get an enemy by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Enemies"
                ],
                "summary": "Get an enemy by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enemy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Enemy"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing enemy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Enemies"
                ],
                "summary": "Update an existing enemy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enemy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enemy",
                        "name": "enemy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/enemies.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Enemy"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an enemy by ID",
                "tags": [
                    "Enemies"
                ],
                "summary": "Delete an enemy by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enemy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/enemy_moves": {
            "get": {
                "description": "List all enemy moves, optionally filtered by EnemyID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EnemyMoves"
                ],
                "summary": "List all enemy moves",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enemy ID",
                        "name": "EnemyID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.EnemyMove"
                            }
                        }
                    }
                }
            }
        },
        "/enemy_moves/{enemyId}": {
            "post": {
                "description": "Create a new enemy move",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EnemyMoves"
                ],
                "summary": "Create a new enemy move",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enemy ID",
                        "name": "enemyId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "EnemyMove",
                        "name": "enemyMove",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/enemy_moves.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EnemyMove"
                        }
                    }
                }
            }
        },
        "/enemy_moves/{id}": {
            "get": {
                "description": "Get an enemy move by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EnemyMoves"
                ],
                "summary": "Get an enemy move by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EnemyMove ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EnemyMove"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing enemy move",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EnemyMoves"
                ],
                "summary": "Update an existing enemy move",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EnemyMove ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "EnemyMove",
                        "name": "enemyMove",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/enemy_moves.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EnemyMove"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an enemy move by ID",
                "tags": [
                    "EnemyMoves"
                ],
                "summary": "Delete an enemy move by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EnemyMove ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "description": "List all locations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "List all locations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Location"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Create a new location",
                "parameters": [
                    {
                        "description": "Location",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/locations.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Location"
                        }
                    }
                }
            }
        },
        "/locations/{id}": {
            "get": {
                "description": "Get a location by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Get a location by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Location"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Update a location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Location",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/locations.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Location"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a location by ID",
                "tags": [
                    "Locations"
                ],
                "summary": "Delete a location by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/special_effects": {
            "get": {
                "description": "List all special effects",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SpecialEffects"
                ],
                "summary": "List all special effects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SpecialEffect"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new special effect",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SpecialEffects"
                ],
                "summary": "Create a new special effect",
                "parameters": [
                    {
                        "description": "Special Effect",
                        "name": "specialEffect",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/special_effects.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SpecialEffect"
                        }
                    }
                }
            }
        },
        "/special_effects/{id}": {
            "get": {
                "description": "Get a special effect by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SpecialEffects"
                ],
                "summary": "Get a special effect by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Special Effect ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SpecialEffect"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a special effect",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SpecialEffects"
                ],
                "summary": "Update a special effect",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Special Effect ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Special Effect",
                        "name": "specialEffect",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/special_effects.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SpecialEffect"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a special effect",
                "tags": [
                    "SpecialEffects"
                ],
                "summary": "Delete a special effect",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Special Effect ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/weapon_combos": {
            "get": {
                "description": "List all weapon combos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WeaponCombos"
                ],
                "summary": "List all weapon combos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.WeaponCombo"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new weapon combo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WeaponCombos"
                ],
                "summary": "Create a new weapon combo",
                "parameters": [
                    {
                        "description": "WeaponCombo",
                        "name": "weaponCombo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/weapon_combos.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WeaponCombo"
                        }
                    }
                }
            }
        },
        "/weapon_combos/{id}": {
            "get": {
                "description": "Get a weapon combo by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WeaponCombos"
                ],
                "summary": "Get a weapon combo by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "WeaponCombo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WeaponCombo"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a weapon combo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WeaponCombos"
                ],
                "summary": "Update a weapon combo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "WeaponCombo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WeaponCombo",
                        "name": "weaponCombo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/weapon_combos.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WeaponCombo"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a weapon combo by ID",
                "tags": [
                    "WeaponCombos"
                ],
                "summary": "Delete a weapon combo by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "WeaponCombo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/weapons": {
            "get": {
                "description": "List all weapons",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Weapons"
                ],
                "summary": "List all weapons",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Weapon"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new weapon along with its combos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Weapons"
                ],
                "summary": "Create a new weapon",
                "parameters": [
                    {
                        "description": "Weapon",
                        "name": "weapon",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/weapons.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Weapon"
                        }
                    }
                }
            }
        },
        "/weapons/{id}": {
            "get": {
                "description": "Get a weapon by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Weapons"
                ],
                "summary": "Get a weapon by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Weapon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Weapon"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a weapon",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Weapons"
                ],
                "summary": "Update a weapon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Weapon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Weapon",
                        "name": "weapon",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/weapons.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Weapon"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a weapon by ID",
                "tags": [
                    "Weapons"
                ],
                "summary": "Delete a weapon by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Weapon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "characters.CreateRequest": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "beginning_way": {
                    "type": "string"
                },
                "class": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "race": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                }
            }
        },
        "characters.UpdateRequest": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "beginning_way": {
                    "type": "string"
                },
                "class": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "race": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                }
            }
        },
        "combo_cards.CreateRequest": {
            "type": "object",
            "properties": {
                "added_number_cells": {
                    "type": "integer"
                },
                "character_id": {
                    "type": "string"
                },
                "damage_combo_cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/combo_cards.DamageComboCard"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "required_number_cells": {
                    "type": "integer"
                },
                "special_effects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/combo_cards.SpecialEffect"
                    }
                },
                "target_enemy_id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ComboCardType"
                }
            }
        },
        "combo_cards.DamageComboCard": {
            "type": "object",
            "properties": {
                "damage": {
                    "type": "integer"
                },
                "range_from": {
                    "type": "integer"
                },
                "range_to": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/models.DamageComboCardType"
                }
            }
        },
        "combo_cards.SpecialEffect": {
            "type": "object",
            "properties": {
                "damage": {
                    "type": "integer"
                },
                "damage_type": {
                    "$ref": "#/definitions/models.SpecialEffectDamageType"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.SpecialEffectType"
                }
            }
        },
        "combo_cards.UpdateRequest": {
            "type": "object",
            "properties": {
                "added_number_cells": {
                    "type": "integer"
                },
                "character_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "required_number_cells": {
                    "type": "integer"
                },
                "target_enemy_id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ComboCardType"
                }
            }
        },
        "damage_combo_cards.CreateRequest": {
            "type": "object",
            "properties": {
                "combo_card_id": {
                    "type": "string"
                },
                "damage": {
                    "type": "integer"
                },
                "range_from": {
                    "type": "integer"
                },
                "range_to": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/models.DamageComboCardType"
                }
            }
        },
        "damage_combo_cards.UpdateRequest": {
            "type": "object",
            "properties": {
                "combo_card_id": {
                    "type": "string"
                },
                "damage": {
                    "type": "integer"
                },
                "range_from": {
                    "type": "integer"
                },
                "range_to": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/models.DamageComboCardType"
                }
            }
        },
        "enemies.CreateRequest": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string",
                    "example": "Warrior"
                },
                "defense": {
                    "type": "integer",
                    "example": 2
                },
                "description": {
                    "type": "string",
                    "example": "A small but fierce warrior"
                },
                "enemy_moves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/enemies.EnemyMoves"
                    }
                },
                "experience": {
                    "type": "integer",
                    "example": 10
                },
                "hp": {
                    "type": "integer",
                    "example": 100
                },
                "level": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Goblin"
                },
                "quantity_deck": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "enemies.EnemyMoves": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Close attack"
                },
                "range_from": {
                    "type": "integer",
                    "example": 1
                },
                "range_to": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "enemies.UpdateRequest": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "defense": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "experience": {
                    "type": "integer"
                },
                "hp": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "quantity_deck": {
                    "type": "integer"
                }
            }
        },
        "enemy_moves.CreateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Close attack"
                },
                "range_from": {
                    "type": "integer",
                    "example": 1
                },
                "range_to": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "enemy_moves.UpdateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "range_from": {
                    "type": "integer"
                },
                "range_to": {
                    "type": "integer"
                }
            }
        },
        "locations.CreateRequest": {
            "type": "object",
            "properties": {
                "danger_level": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "monsters_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "locations.UpdateRequest": {
            "type": "object",
            "properties": {
                "danger_level": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "monsters_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Character": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "beginning_way": {
                    "type": "string"
                },
                "class": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "race": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                }
            }
        },
        "models.ComboCard": {
            "type": "object",
            "properties": {
                "added_number_cells": {
                    "type": "integer"
                },
                "character_id": {
                    "type": "string"
                },
                "damage_combo_cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DamageComboCard"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "required_number_cells": {
                    "type": "integer"
                },
                "special_effects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SpecialEffect"
                    }
                },
                "target_enemy_id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ComboCardType"
                }
            }
        },
        "models.ComboCardType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "Flex",
                "CombatSkill",
                "Ability"
            ]
        },
        "models.DamageComboCard": {
            "type": "object",
            "properties": {
                "combo_card_id": {
                    "type": "string"
                },
                "damage": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "range_from": {
                    "type": "integer"
                },
                "range_to": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/models.DamageComboCardType"
                }
            }
        },
        "models.DamageComboCardType": {
            "type": "integer",
            "enum": [
                0
            ],
            "x-enum-varnames": [
                "PhysicalDamage"
            ]
        },
        "models.Enemy": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string",
                    "example": "Warrior"
                },
                "defense": {
                    "type": "integer",
                    "example": 2
                },
                "description": {
                    "type": "string",
                    "example": "A small but fierce warrior"
                },
                "enemy_moves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnemyMove"
                    }
                },
                "experience": {
                    "type": "integer",
                    "example": 10
                },
                "hp": {
                    "type": "integer",
                    "example": 100
                },
                "id": {
                    "type": "string"
                },
                "level": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Goblin"
                },
                "quantity_deck": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "models.EnemyMove": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Slash attack"
                },
                "enemy_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "range_from": {
                    "type": "integer",
                    "example": 1
                },
                "range_to": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "models.Location": {
            "type": "object",
            "properties": {
                "danger_level": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "monsters_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.SpecialEffect": {
            "type": "object",
            "properties": {
                "combo_card_id": {
                    "type": "string"
                },
                "damage": {
                    "type": "integer"
                },
                "damage_type": {
                    "$ref": "#/definitions/models.SpecialEffectDamageType"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.SpecialEffectType"
                }
            }
        },
        "models.SpecialEffectDamageType": {
            "type": "integer",
            "enum": [
                0
            ],
            "x-enum-varnames": [
                "EffectOnly"
            ]
        },
        "models.SpecialEffectType": {
            "type": "integer",
            "enum": [
                0
            ],
            "x-enum-varnames": [
                "Variable"
            ]
        },
        "models.Weapon": {
            "type": "object",
            "properties": {
                "character_id": {
                    "type": "string"
                },
                "count_cards": {
                    "type": "integer"
                },
                "defense": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "weapon_combo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.WeaponCombo"
                    }
                }
            }
        },
        "models.WeaponCombo": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/models.WeaponComboType"
                },
                "weapon_id": {
                    "type": "string"
                }
            }
        },
        "models.WeaponComboType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "FlexSlot",
                "CombatSkillSlot",
                "AbilitySlot"
            ]
        },
        "special_effects.CreateRequest": {
            "type": "object",
            "properties": {
                "combo_card_id": {
                    "type": "string"
                },
                "damage": {
                    "type": "integer"
                },
                "damage_type": {
                    "$ref": "#/definitions/models.SpecialEffectDamageType"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.SpecialEffectType"
                }
            }
        },
        "special_effects.UpdateRequest": {
            "type": "object",
            "properties": {
                "combo_card_id": {
                    "type": "string"
                },
                "damage": {
                    "type": "integer"
                },
                "damage_type": {
                    "$ref": "#/definitions/models.SpecialEffectDamageType"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.SpecialEffectType"
                }
            }
        },
        "weapon_combos.CreateRequest": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/models.WeaponComboType"
                },
                "weapon_id": {
                    "type": "string"
                }
            }
        },
        "weapon_combos.UpdateRequest": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/models.WeaponComboType"
                },
                "weapon_id": {
                    "type": "string"
                }
            }
        },
        "weapons.CreateRequest": {
            "type": "object",
            "properties": {
                "character_id": {
                    "type": "string"
                },
                "count_cards": {
                    "type": "integer"
                },
                "defense": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "weapon_combo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/weapons.WeaponCombo"
                    }
                }
            }
        },
        "weapons.UpdateRequest": {
            "type": "object",
            "properties": {
                "character_id": {
                    "type": "string"
                },
                "count_cards": {
                    "type": "integer"
                },
                "defense": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "weapons.WeaponCombo": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/models.WeaponComboType"
                }
            }
        }
    }
}