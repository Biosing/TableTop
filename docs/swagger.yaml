basePath: /
definitions:
  characters.CreateRequest:
    properties:
      age:
        type: integer
      beginning_way:
        type: string
      class:
        type: string
      description:
        type: string
      name:
        type: string
      race:
        type: string
      sex:
        type: string
    type: object
  characters.UpdateRequest:
    properties:
      age:
        type: integer
      beginning_way:
        type: string
      class:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      race:
        type: string
      sex:
        type: string
    type: object
  models.Character:
    properties:
      age:
        type: integer
      beginning_way:
        type: string
      class:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      race:
        type: string
      sex:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for a table top game.
  title: Table Top API
  version: "1.0"
paths:
  /characters:
    get:
      description: List all characters
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Character'
            type: array
      summary: List all characters
    post:
      consumes:
      - application/json
      description: Create a new character
      parameters:
      - description: Character
        in: body
        name: character
        required: true
        schema:
          $ref: '#/definitions/characters.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Character'
      summary: Create a new character
    put:
      consumes:
      - application/json
      description: Update a character
      parameters:
      - description: Character
        in: body
        name: character
        required: true
        schema:
          $ref: '#/definitions/characters.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Character'
      summary: Update a character
  /characters/{id}:
    delete:
      description: Delete a character by ID
      parameters:
      - description: Character ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      summary: Delete a character by ID
    get:
      description: Get a character by ID
      parameters:
      - description: Character ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Character'
      summary: Get a character by ID
swagger: "2.0"
